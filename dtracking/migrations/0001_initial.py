# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-10-09 16:36
from __future__ import unicode_literals

import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import geoposition.fields
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Archivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable', models.CharField(max_length=80)),
                ('archivo', models.FileField(null=True, upload_to=b'')),
                ('fecha', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Archivos Media',
            },
        ),
        migrations.CreateModel(
            name='Armador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'armadores',
            },
        ),
        migrations.CreateModel(
            name='Banco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='codigo')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'bancos nacionales',
            },
        ),
        migrations.CreateModel(
            name='Barrio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='codigo')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='codigo')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DetalleGestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('input', 'input'), ('radio', 'radio'), ('textarea', 'textarea'), ('combobox', 'combobox'), ('checkbox', 'checkbox'), ('foto', 'foto'), ('multi foto', 'multi foto'), ('firma', 'firma')], max_length=25, verbose_name='tipo de campo')),
                ('requerido', models.BooleanField(default=True)),
                ('titulo', models.CharField(max_length=65, verbose_name='titulo a mostrar')),
                ('nombreVariable', models.CharField(max_length=65, verbose_name='nombre de la variable')),
                ('habilitado', models.BooleanField(default=True)),
                ('orden', models.IntegerField(blank=True, null=True)),
                ('imprime', models.BooleanField(default=False, verbose_name='se imprime')),
            ],
            options={
                'ordering': ['orden'],
                'verbose_name': 'campo',
                'verbose_name_plural': 'campos requeridos por la gestion',
            },
        ),
        migrations.CreateModel(
            name='Ejecutivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
                ('telefono', models.CharField(blank=True, max_length=65, null=True)),
                ('email', models.EmailField(blank=True, max_length=265, null=True)),
                ('banco', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtracking.Banco')),
            ],
            options={
                'verbose_name_plural': 'ejecutivos bancarios',
            },
        ),
        migrations.CreateModel(
            name='Elemento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.CharField(max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='Gestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(blank=True, null=True, verbose_name='fecha de solicitud')),
                ('barra', models.CharField(max_length=65, null=True, verbose_name='C\xf3digo de avaluo')),
                ('observaciones', models.TextField(blank=True, max_length=600, null=True)),
                ('observaciones_cotizacion', models.TextField(blank=True, max_length=255, null=True, verbose_name='observaciones en la cotizaci\xf3n')),
                ('referencia', models.CharField(blank=True, max_length=35, null=True, verbose_name='Referencia bancaria')),
                ('valor', models.FloatField(blank=True, null=True, verbose_name='precio del avaluo ya con iva')),
                ('categoria', models.CharField(blank=True, max_length=50, null=True)),
                ('informe_final', models.FileField(blank=True, null=True, upload_to='fichas')),
                ('status_gestion', models.CharField(blank=True, choices=[('RECEPCIONADO', 'RECEPCIONADO'), ('ASIGNADO A EVALUADOR', 'ASIGNADO A EVALUADOR'), ('LEVANTAMIENTO REALIZADO', 'LEVANTAMIENTO REALIZADO'), ('EN REVISION FINAL DE INFORME', 'EN REVISION FINAL DE INFORME'), ('TERMINADO', 'TERMINADO')], default='RECEPCIONADO', max_length=60, null=True)),
                ('destinatario', models.CharField(max_length=125, null=True, verbose_name='Cliente')),
                ('identificacion', models.CharField(blank=True, max_length=25, null=True, verbose_name='Itentificaci\xf3n')),
                ('contacto', models.CharField(blank=True, max_length=125, null=True, verbose_name='Contacto')),
                ('contacto_telefono', models.CharField(blank=True, max_length=125, null=True, verbose_name='Tel\xe9fono del contacto')),
                ('telefono', models.CharField(blank=True, max_length=65, null=True)),
                ('direccion', models.TextField(max_length=255, null=True, verbose_name='Ubicacion del bien a avaluar')),
                ('direccion_envio', models.CharField(blank=True, max_length=255, null=True, verbose_name='Direcci\xf3n de env\xedo')),
                ('banco', models.CharField(blank=True, choices=[('BANPRO', 'BANPRO'), ('BANCENTRO', 'BANCENTRO'), ('BAC', 'BAC'), ('BDF', 'BDF'), ('FICOHSA', 'FICOHSA'), ('PROCREDIT', 'PROCREDIT')], help_text='temporal', max_length=25, null=True, verbose_name='Banco')),
                ('banco_ejecutivo', models.CharField(blank=True, help_text='temporal', max_length=100, null=True, verbose_name='Ejecutivo bancario')),
                ('notify', models.BooleanField(default=False, verbose_name='notificar')),
                ('fecha_asignacion', models.DateTimeField(blank=True, null=True)),
                ('realizada', models.BooleanField(default=False)),
                ('ficha_inspeccion', models.FileField(blank=True, null=True, upload_to='fichas')),
                ('position', geoposition.fields.GeopositionField(blank=True, default='12.129239891689053,-86.26631538391109', max_length=42, null=True)),
                ('json', jsonfield.fields.JSONField(blank=True, null=True)),
                ('fecha_recepcion', models.DateField(blank=True, null=True)),
                ('fecha_vence', models.DateField(blank=True, null=True)),
                ('revizada', models.BooleanField(default=False)),
                ('fecha_entrega_efectiva', models.DateField(blank=True, null=True)),
                ('dias', models.IntegerField(default=0, null=True, verbose_name='dias extras para el armado')),
            ],
            options={
                'verbose_name': 'Avaluo',
                'verbose_name_plural': 'Avaluos',
            },
        ),
        migrations.CreateModel(
            name='Gestion_Fin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='codigo')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Finalidad de avaluo',
                'verbose_name_plural': 'Fines de Avaluo',
            },
        ),
        migrations.CreateModel(
            name='Gestion_Uso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='codigo')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('activo', models.BooleanField(default=True)),
                ('fin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtracking.Gestion_Fin')),
            ],
            options={
                'verbose_name': 'Uso de avaluo',
                'verbose_name_plural': 'Usos de Avaluo',
            },
        ),
        migrations.CreateModel(
            name='Gestor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(help_text='numero de celular', max_length=8)),
                ('server_conection', models.CharField(blank=True, choices=[('SMS + WIFI', 'SMS + WIFI'), ('3G + WIFI', '3G + WIFI'), ('WIFI', 'WIFI')], default='WIFI', max_length=25, null=True)),
                ('sms_gateway', models.CharField(max_length=20, null=True)),
                ('foto', models.ImageField(null=True, upload_to=b'')),
                ('intervalo', models.PositiveIntegerField(help_text='esto determina que tan seguido el gestor reportara su posicion gps en segundos', null=True, verbose_name='intervalo de seguimiento')),
            ],
            options={
                'verbose_name': 'perito',
                'verbose_name_plural': 'Peritos',
            },
        ),
        migrations.CreateModel(
            name='Import',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destinatario', models.CharField(blank=True, max_length=150, null=True)),
                ('direccion', models.TextField(blank=True, max_length=250, null=True)),
                ('telefono', models.CharField(blank=True, max_length=65, null=True)),
                ('barrio', models.CharField(blank=True, max_length=150, null=True)),
                ('municipio', models.CharField(blank=True, max_length=150, null=True)),
                ('departamento', models.CharField(blank=True, max_length=150, null=True)),
                ('idbarrio', models.ForeignKey(blank=True, db_column='idbarrio', null=True, on_delete=django.db.models.deletion.CASCADE, to='dtracking.Barrio', verbose_name='barrio')),
                ('iddepartamento', models.ForeignKey(blank=True, db_column='iddepartamento', null=True, on_delete=django.db.models.deletion.CASCADE, to='dtracking.Departamento', verbose_name='departamento')),
            ],
        ),
        migrations.CreateModel(
            name='Log_Gestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(null=True)),
                ('estado', models.CharField(choices=[('RECEPCIONADO', 'RECEPCIONADO'), ('ASIGNADO A EVALUADOR', 'ASIGNADO A EVALUADOR'), ('LEVANTAMIENTO REALIZADO', 'LEVANTAMIENTO REALIZADO'), ('EN REVISION FINAL DE INFORME', 'EN REVISION FINAL DE INFORME'), ('TERMINADO', 'TERMINADO')], max_length=50, null=True)),
                ('gestion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtracking.Gestion')),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='codigo')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('activo', models.BooleanField(default=True)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtracking.Departamento')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', geoposition.fields.GeopositionField(max_length=42)),
                ('fecha', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'posicion',
                'verbose_name_plural': 'seguimiento gps',
            },
        ),
        migrations.CreateModel(
            name='Registro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
                ('mensaje', models.TextField()),
                ('fecha', models.DateTimeField()),
                ('usuario', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.CharField(max_length=540)),
                ('enviado', models.BooleanField(default=False)),
                ('fecha_envio', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TipoGestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='codigo')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('activo', models.BooleanField(default=True)),
                ('prefijo', models.CharField(max_length=6, null=True)),
                ('tiempo_ejecucion', models.IntegerField(blank=True, help_text='Tiempo requerido en minutos para el levantamiento de datos de este tipo de avaluo', null=True, verbose_name='tiempo en minutos para el peritaje')),
                ('color', colorfield.fields.ColorField(default='ffffff', max_length=18)),
                ('dias', models.IntegerField(default=4, null=True, verbose_name='dias necesarios para el armado')),
            ],
            options={
                'ordering': ['prefijo'],
                'verbose_name': 'tipo de avaluo',
                'verbose_name_plural': 'tipos de avaluos',
            },
        ),
        migrations.CreateModel(
            name='Zona',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True, verbose_name='codigo')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('activo', models.BooleanField(default=True)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtracking.Departamento')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ZonaBarrio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orden', models.IntegerField(blank=True, null=True)),
                ('barrio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtracking.Barrio')),
                ('zona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtracking.Zona')),
            ],
        ),
        migrations.CreateModel(
            name='Operaciones',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('auth.user',),
        ),
        migrations.CreateModel(
            name='Perito',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('auth.user',),
        ),
        migrations.AddField(
            model_name='sms',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='position',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='log_gestion',
            name='usuario',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='import',
            name='idmunicipio',
            field=models.ForeignKey(blank=True, db_column='idmunicipio', null=True, on_delete=django.db.models.deletion.CASCADE, to='dtracking.Municipio', verbose_name='municipio'),
        ),
        migrations.AddField(
            model_name='gestor',
            name='tipo_gestion',
            field=models.ManyToManyField(blank=True, to='dtracking.TipoGestion'),
        ),
        migrations.AddField(
            model_name='gestor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gestor',
            name='zonas',
            field=models.ManyToManyField(to='dtracking.Zona'),
        ),
        migrations.AddField(
            model_name='gestion',
            name='armador',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gestion_armador', to='dtracking.Operaciones'),
        ),
        migrations.AddField(
            model_name='gestion',
            name='barrio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dtracking.Barrio'),
        ),
        migrations.AddField(
            model_name='gestion',
            name='departamento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dtracking.Departamento'),
        ),
        migrations.AddField(
            model_name='gestion',
            name='fin_gestion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dtracking.Gestion_Fin'),
        ),
        migrations.AddField(
            model_name='gestion',
            name='municipio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dtracking.Municipio'),
        ),
        migrations.AddField(
            model_name='gestion',
            name='new_banco',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dtracking.Banco'),
        ),
        migrations.AddField(
            model_name='gestion',
            name='new_ejecutivo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dtracking.Ejecutivo'),
        ),
        migrations.AddField(
            model_name='gestion',
            name='tipo_gestion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtracking.TipoGestion'),
        ),
        migrations.AddField(
            model_name='gestion',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dtracking.Perito', verbose_name='perito'),
        ),
        migrations.AddField(
            model_name='gestion',
            name='uso_gestion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dtracking.Gestion_Uso'),
        ),
        migrations.AddField(
            model_name='gestion',
            name='zona',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dtracking.Zona'),
        ),
        migrations.AddField(
            model_name='detallegestion',
            name='tipo_gestion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtracking.TipoGestion'),
        ),
        migrations.AddField(
            model_name='barrio',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtracking.Municipio'),
        ),
        migrations.AddField(
            model_name='armador',
            name='especialidades',
            field=models.ManyToManyField(blank=True, to='dtracking.TipoGestion'),
        ),
        migrations.AddField(
            model_name='armador',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='archivo',
            name='gestion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtracking.Gestion'),
        ),
        migrations.AddField(
            model_name='archivo',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='EspecialField',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('dtracking.detallegestion',),
        ),
        migrations.AddField(
            model_name='elemento',
            name='combo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtracking.EspecialField'),
        ),
    ]
